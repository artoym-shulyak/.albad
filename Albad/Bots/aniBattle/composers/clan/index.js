const { Composer, Markup, Extra } = require('telegraf')
const fs = require('fs')
const bot = new Composer()
const Clan = require('../../models/clan.model.js')
const User = require('../../models/user.model.js')
const { download } = require('./downloadImage.js')
const throttle = require('../../utils/throttle.js')
const sleep = require('../../utils/sleep.js')

// 'üè∞ –ì–∏–ª—å–¥–∏—è'
const clan = async (ctx) => {
	try {
		const uuid = String(ctx[0].from.id) // ID user
  let data

		if (ctx[0].updateType === 'callback_query') {
			data = ctx[0].match[1]
			if (data.indexOf(uuid) === -1) return
		 ctx[0].answerCbQuery('üè∞', { cache_time: 3 })
		} 

		switch (ctx[1]) {
		 case '–≥–∏–ª—å–¥–∏—è':
				await User.findOne({ uuid }).then(async user => {
					if (user == null) return
					if (user.clan.clan === true) {
					if (user.clan.leader === true) {
						await Clan.findOne({ name: user.clan.name }).then(async clan => {
						// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤—ã–ø–æ–ª–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–µ
				 	if (clan.quest.todayCompleted === clan.quest.count || clan.quest.todayCompleted >= clan.quest.count) {
					  await Clan.updateOne({"leader.uuid": uuid }, { 
					  	$set: { "quest.completed": true, "quest.todayCompleted": user.quest.count } 
					  })
				  } 	

							await ctx[0].replyWithPhoto(
								{ source: fs.createReadStream(`./composers/clan/images/${clan.image}`)  },
								{
									caption: ctx[0].i18n.t('cl_info_player', {
										surname: clan.name,
										countEmployees: clan.employees.length,
										glory: clan.glory,
										money: clan.money,
										structure: clan.structure,
										date: clan.updated.toLocaleString('ru-RU'),
										description: clan.description
									}),
									parse_mode: 'HTML',
									...Extra.markup(
										Markup.inlineKeyboard([
											[
												Markup.urlButton(
													'‚úâÔ∏è –ì·¥ß·¥Ä ô·¥Ä',
													`https://t.me/${clan.leader.username}`
												),
												Markup.callbackButton(
													'üë• –°·¥è·¥Ñ·¥õ·¥Ä ô',
													`employees_${user.clan.name}_${uuid}`
												),
											],
											[
												Markup.urlButton('‚úâÔ∏è –ë·¥á·¥Ñ·¥á–¥·¥Ä', `${clan.chat}`),
												Markup.callbackButton('üìú –ó·¥Ä–¥·¥Ä–Ω–∏·¥á', `cl_q_${uuid}`)],
											[
												Markup.urlButton(
													'üÜò –ö·¥è ç·¥Ä–Ω–¥—ã',
													'https://telegra.ph/Komandy-Gildii-10-29'
												),
												Markup.callbackButton(
													'ü™ô –ú·¥è—è ·¥ß·¥Ä ô·¥ã·¥Ä',
													`my_bench_${uuid}`
												)
											],
											[
												Markup.callbackButton(
													'üö™ –†·¥Ä·¥Ñ·¥®—É·¥Ñ·¥õ–∏·¥õ—å ·¥¶–∏·¥ß—å–¥–∏—é',
													`cl_dessolve_${user.clan.name}_${uuid}`
												)
											],
										])
									),
								}
							)
						})
					} else {
						await Clan.findOne({ name: user.clan.name }).then(async clan => {
							await ctx[0].replyWithPhoto(
								{ source: `./composers/clan/images/${clan.image}` },
								{
									caption: ctx[0].i18n.t('cl_info', {
										surname: clan.name,
										countEmployees: clan.employees.length,
										glory: clan.glory,
										date: clan.updated.toLocaleString('ru-RU'),
										description: clan.description
									}),
									parse_mode: 'HTML',
									...Extra.markup(
										Markup.inlineKeyboard([
											[
												Markup.urlButton(
													'‚úâÔ∏è –ì·¥ß·¥Ä ô·¥Ä',
													`https://t.me/${clan.leader.username}`
												),
												Markup.urlButton('‚úâÔ∏è –ë–µ—Å–µ–¥–∞', `${clan.chat}`)],
											[
												Markup.callbackButton(
													'üë• –°·¥è·¥Ñ·¥õ·¥Ä ô',
													`employees_${user.clan.name}_${uuid}`
												)
											],
											[
												Markup.callbackButton(
													'üö™ –ü·¥è·¥ã–∏–Ω—É·¥õ—å ·¥¶–∏·¥ß—å–¥–∏—é',
													`cl_leave_${user.clan.name}_${uuid}`
												)
												]
										])
									),
								}
							)
						})
					}
					} else {
						await ctx[0].editMessageText(
							ctx[0].i18n.t('clan'),
							Extra.markup(
								Markup.inlineKeyboard([
									[
										Markup.callbackButton('‚¨ÖÔ∏è –ù·¥Ä…ú·¥Ä–¥', `world_${uuid}`),
										Markup.urlButton(
											'üÜò –ö·¥è ç·¥Ä–Ω–¥—ã',
											'https://telegra.ph/Komandy-Gildii-10-29'
										)
									],
								])
							).HTML()
						)
					}
				})
		 	break
		 case '—Å–æ–∑–¥–∞–Ω–∏–µ':
				if (!ctx[0].message.caption) return
				const fileId = ctx[0].message.photo.pop().file_id
			 if (ctx[0].message.caption.toLowerCase().indexOf('—Å–æ–∑–¥–∞—Ç—å –≥–∏–ª—å–¥–∏—é') === -1) return
			 let surnameClan = ctx[0].message.caption.replace(/—Å–æ–∑–¥–∞—Ç—å –≥–∏–ª—å–¥–∏—é /i, '')

				if (surnameClan.length < 2 || surnameClan.length > 50) {
					ctx.replyWithHTML('‚öí –ù–∞–∑–≤–∞–Ω–∏–µ –ì–∏–ª—å–¥–∏–∏ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å: <i>–º–∏–Ω. 2 - –º–∞–∫—Å 50 —Å–∏–º–≤–æ–ª–æ–≤</i>.')
					return
				} 

				// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –∏–º—è
				await Clan.find().then(async clans => {
					await clans.forEach(clan => {
						if (clan.name == surnameClan) {
							ctx[0].reply('üßë‚Äçüíª –≠·¥õ·¥è –∏ ç—è –ì–∏·¥ß—å–¥–∏–∏ —É–∂·¥á …ú·¥Ä–Ω—è·¥õ·¥è.')
							throw new Error('–≠—Ç–æ –∏–º—è —É–∂–µ –∑–∞–Ω—è—Ç–æ')
						}
					})
				})

				await User.findOne({ uuid }).then(async user => {
					if (user == null) return
					if (user.clan.clan) return
					if (user.vipCard.vip === 0) return

					await download(
						fileId,
						surnameClan,
						async () =>
							await new Clan({
								name: surnameClan,
								'leader.uuid': user.uuid,
								image: `./${surnameClan}.jpg`,
								employees: user.uuid,
								"leader.username": user.username
							}).save()
					)

				await User.updateOne(
					{ uuid },
					{
						$set: {
							'clan.clan': true,
							'clan.leader': true,
							'clan.name': surnameClan,
						},
					}
				)

					await ctx[0].reply(`‚õ∫Ô∏è –°·¥è…ú–¥·¥Ä–Ω·¥Ä ·¥¶–∏·¥ß—å–¥–∏—è ${surnameClan}`)
				})
		 	break
		 case '—Å–æ—Å—Ç–∞–≤':
				let surnameStructureClan = ctx[0].match[0]
					.replace(/employees_/, '')
					.replace(`_${uuid}`, '')
				let listStructure = ''

				await Clan.findOne({ name: surnameStructureClan }).then(async clan => {
					for (let i = 0; i < clan.employees.length; i++) {
						await User.findOne({ uuid: clan.employees[i] }).then(user => {
							let leader = user.clan.leader ? '‚û† ü§¥' : ''
							let assistant = user.clan.assistant ? '‚û† üé©' : ''

							listStructure += `${i + 1}.<a href="https://t.me/${user.username}">${
								user.name
							}</a> ${assistant}${leader}\n   <strong>‚Ü≥</strong>üí• ${
								user.stats.bm
							} | ‚ù§Ô∏è ${user.stats.hp}\n`
						})
					}
					await ctx[0].replyWithHTML(ctx[0].i18n.t('cl_employees', { listStructure, clan }), {
						disable_web_page_preview: true,
					})
				})
		 	break
		 case '–∏–Ω—Ñ–∞ –≥–∏–ª—å–¥–∏–∏':
				surnameSearchClan = ctx[0].message.text.replace(/–∏–Ω—Ñ–∞ –≥–∏–ª—å–¥–∏–∏ /, '')

				await Clan.findOne({ name: surnameSearchClan }).then(async clan => {
					await ctx[0].replyWithPhoto(
						{ source: fs.createReadStream(`./composers/clan/images/${clan.image}`) },
						{
							caption: ctx[0].i18n.t('cl_info', {
								surname: clan.name,
								countEmployees: clan.employees.length,
								glory: clan.glory,
								date: clan.updated.toLocaleString('ru-RU'),
								description: clan.description
							}),
							parse_mode: 'HTML',
							...Extra.markup(
								Markup.inlineKeyboard([
									[
										Markup.urlButton(
											'‚úâÔ∏è –ì·¥ß·¥Ä ô·¥Ä',
											`https://t.me/${clan.leader.username}`
										),
										Markup.callbackButton(
											'üë• –°·¥è·¥Ñ·¥õ·¥Ä ô',
											`employees_${surnameSearchClan}_${uuid}`
										),
									],
								])
							),
						}
					)
				})
		 	break
  	case '–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ':
  		let uuidAddEmp = ctx[0].message.text.toLowerCase().replace(/–¥–æ–±–∞–≤–∏—Ç—å –≤ –ª–∞–≤–∫—É/, '').trim()
		  await Clan.findOne({"leader.uuid": uuid})
		  .then(async clan => {
		  	if (!clan.employees.includes(uuidAddEmp)) return // –ü—Ä–æ–≤–µ–∫–∞ –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π –∏–≥—Ä–æ–∫ –≤ –ì–∏–ª—å–¥–∏–∏
		  	if (clan.benchEmployees.includes(uuidAddEmp)) return // –ü—Ä–æ–≤–µ–∫–∞ –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π –∏–≥—Ä–æ–∫ –≤ –õ–∞–≤–∫–µ –ì–∏–ª—å–¥–∏–∏ 
		  	await Clan.updateOne({"leader.uuid": uuid}, { $push: { "benchEmployees": +uuidAddEmp } })
		   .then(async () => {
		   	await ctx[0].replyWithHTML('‚õ∫Ô∏è –î·¥è–±·¥Ä ô·¥ß·¥á–Ω  ô –õ·¥Ä ô·¥ã—É.')
		   	await sleep(10000)
		   	await ctx[0].telegram.sendMessage(uuidAddEmp, '‚õ∫Ô∏è –¢·¥á–±—è –¥·¥è–±·¥Ä ô–∏·¥ß–∏  ô –õ·¥Ä ô·¥ã—É –ì–∏·¥ß—å–¥–∏–∏!')
		   })
		  })
 		 break
  	case '–∏—Å–∫–ª—é—á–µ–Ω–∏–µ':
    uuidRemoveEmp = ctx[0].message.text.toLowerCase().replace(/–∏—Å–∫–ª—é—á–∏—Ç—å –∏–∑ –ª–∞–≤–∫–∏/, '').trim()
		  await Clan.findOne({"leader.uuid": uuid})
		  .then(async clan => {
		  	if (!clan.employees.includes(uuidRemoveEmp)) return // –ü—Ä–æ–≤–µ–∫–∞ –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π –∏–≥—Ä–æ–∫ –≤ –ì–∏–ª—å–¥–∏–∏
		  	if (!clan.benchEmployees.includes(uuidRemoveEmp)) return // –ü—Ä–æ–≤–µ–∫–∞ –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π –∏–≥—Ä–æ–∫ –≤ –õ–∞–≤–∫–µ –ì–∏–ª—å–¥–∏–∏ 
		  	await Clan.updateOne({"leader.uuid": uuid}, { $pull: { "benchEmployees": +uuidRemoveEmp } })
		   .then(async () => {
		   	await ctx[0].replyWithHTML('‚õ∫Ô∏è –ò·¥Ñ·¥ß—é—á·¥á–Ω –∏…ú –õ·¥Ä ô·¥ã–∏.')
		   	await sleep(10000)
		   	await ctx[0].telegram.sendMessage(uuidRemoveEmp, '‚õ∫Ô∏è –¢·¥á–±—è –∏·¥Ñ·¥ã·¥ß—é—á–∏·¥ß–∏ –∏…ú –õ·¥Ä ô·¥ã–∏ –ì–∏·¥ß—å–¥–∏–∏!')
		   })
		  })
		  break
		 case '–º–æ—è –ª–∞–≤–∫–∞':
				let listBench = ''
		  await Clan.findOne({"leader.uuid":uuid})
		  .then(async clan => {
		  	for (let i = 0; i < clan.benchEmployees.length; i++) {
		  		await User.findOne({"uuid":clan.benchEmployees[i]})
		  		.then(async user => {
		  			listBench += `${i+1}. <a href="https://t.me/${user.username}">${user.name}</a>\n`
		  		})
		  	}
		  	await ctx[0].replyWithHTML(ctx[0].i18n.t('–ú–æ—è_–õ–∞–≤–∫–∞_–ì–∏', {listBench}), {
		  		disable_web_page_preview: true,
		  	})
		  })
				break
			case '–º–æ–Ω–µ—Ç—ã':
				data = ctx[0].match[0] // Information btn
				if (data.indexOf(uuid) === -1) return // –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—É–∂–æ–∫–æ–≥–æ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
				await ctx[0].editMessageText(
					ctx[0].i18n.t('cl_shop_money'),
					Extra.markup(
						Markup.inlineKeyboard([
							[Markup.callbackButton('üí∞ –ü·¥è·¥®·¥è·¥ß–Ω–∏·¥õ—å', `—Ål_donat_${uuid}`)],
							[Markup.callbackButton('‚¨ÖÔ∏è –ù·¥Ä…ú·¥Ä–¥', `shop_${uuid}`)],
						])
					).HTML()
				)
				ctx[0].answerCbQuery('ü™ô –ú·¥è–Ω·¥á·¥õ—ã ·¥¶–∏·¥ß—å–¥–∏–∏', { cache_time: 3 })
			 break
			case '–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ':
				uuidInviteEmp = ctx[0].message.text
					.replace(/–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤ –≥–∏–ª—å–¥–∏—é /i, '')
					.trim()
				await User.findOne({ uuid }).then(async user => {
					// –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ —è–≤–ª—è–µ—Ç—Å—è –õ–∏–¥–µ—Ä–æ–º –∏–ª–∏ –ó–∞–º–æ–º, —Ç–æ –∏–¥–µ–º –¥–∞–ª—å—à–µ..
					if (user.clan.leader === true || user.clan.assistant === true) {
						await Clan.findOne({ name: user.clan.name }).then(async clan => {
							if (clan.employees.includes(uuidInviteEmp)) return // –ï—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ, —Ç–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
							if (clan.employees.length === clan.structure) return

							await ctx[0].reply('‚õ∫Ô∏è –û·¥õ·¥®·¥©·¥Ä ô·¥ß·¥á–Ω·¥è ·¥®·¥©–∏·¥¶·¥ß·¥Ä…Ø·¥á–Ω–∏·¥á.')
						 await sleep(10000)
							await ctx[0].telegram.sendMessage(
								uuidInviteEmp,
								`‚õ∫Ô∏è –¢·¥á–±—è ·¥®·¥©–∏·¥¶·¥ß·¥Ä…Ø·¥Ä—é·¥õ  ô ·¥¶–∏·¥ß—å–¥–∏—é ${clan.name}.`,
								{
									...Extra.markup(
										Markup.inlineKeyboard([
											[
												Markup.callbackButton(
													'‚úÖ –ü·¥©–∏–Ω—è·¥õ—å',
													`cl_success_${clan.name}_${uuidInviteEmp}`
												),
												Markup.callbackButton(
													'‚ùå –û·¥õ·¥ã·¥ß·¥è–Ω–∏·¥õ—å',
													`cl_error_${clan.name}_${uuidInviteEmp}`
												),
											],
										])
									).HTML(),
								}
							)
						})
					}
				})
			case '–∏—Å–∫–ª—é—á–µ–Ω–∏–µ':
				playerUuid = ctx[0].message.text
					.replace(/–∏—Å–∫–ª—é—á–∏—Ç—å –∏–∑ –≥–∏–ª—å–¥–∏–∏ /i, '')
					.trim()

				await User.findOne({ uuid }).then(async user => {
					// –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ —è–≤–ª—è–µ—Ç—Å—è –õ–∏–¥–µ—Ä–æ–º –∏–ª–∏ –ó–∞–º–æ–º, —Ç–æ –∏–¥–µ–º –¥–∞–ª—å—à–µ...
					if (user.clan.leader === true || user.clan.assistant === true) {
						await Clan.findOne({ name: user.clan.name }).then(async clan => {
							if (!clan.employees.includes(playerUuid)) return // –ï—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç—É –≤ —Å–ø–∏—Å–∫–µ, —Ç–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º

							// –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ —è–≤—è–ª–µ—Ç—Å—è –∑–∞–º–æ–º, —Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç –∏—Å–∫–ª—é—á–∏—Ç—å –¥—Ä—É–≥–∏—Ö –∑–∞–º–æ–≤ –∏–ª–∏ –ª–∏–¥–µ—Ä–∞
							if (user.clan.assistant === true) {
								await User.findOne({ uuid: playerUuid }).then(async user => {
									if (user.clan.leader === true || user.clan.assistant === true) {
										throw new Error('–û–Ω –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –∏–ª–∏ –ª–∏–¥–µ—Ä –ì–∏–ª—å–¥–∏–∏')
									}
								})
							}

							await Clan.updateOne(
								{ name: clan.name },
								{ $pull: { employees: playerUuid } }
							).then(async () => {
								await User.updateOne(
									{ uuid: playerUuid },
									{
										$set: {
											'clan.clan': false,
											'clan.name': 'null',
											'clan.assistant': false,
										},
									}
								).then(async () => {
									await ctx[0].reply('‚õ∫Ô∏è –ò·¥Ñ·¥ã·¥ß—é—á·¥á–Ω –∏…ú ·¥¶–∏·¥ß—å–¥–∏–∏.')
									await sleep(10000)
									await ctx[0].telegram.sendMessage(
										playerUuid,
										`‚õ∫Ô∏è –¢·¥á–±—è –∏·¥Ñ·¥ã·¥ß—é—á–∏·¥ß–∏ –∏…ú ·¥¶–∏·¥ß—å–¥–∏–∏ ${clan.name}.`
									)
								})
							})
						})
					}
				})
			case '–ø–æ–Ω–∏–∂–µ–Ω–∏–µ':
				uuidDownEmp = ctx[0].message.text.replace(/–ø–æ–Ω–∏–∑–∏—Ç—å –≥–∏–ª—å–¥–∏—è /i, '').trim()

				await User.findOne({ uuid }).then(async user => {
					// –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ —è–≤–ª—è–µ—Ç—Å—è –õ–∏–¥–µ—Ä–æ–º, —Ç–æ –∏–¥–µ–º –¥–∞–ª—å—à–µ...
					if (user.clan.leader === true) {
						await Clan.findOne({ name: user.clan.name }).then(async clan => {
							if (!clan.employees.includes(uuidDownEmp)) return // –ï—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç—É –≤ —Å–ø–∏—Å–∫–µ, —Ç–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º

							await User.findOne({ uuid: uuidDownEmp }).then(async player => {
								if (player.clan.name !== clan.name) return // –ï—Å–ª–∏ –∏–º–µ–Ω–∞ –ì–∏–ª—å–¥–∏–∏ –Ω–µ —Ä–∞–≤–Ω—ã, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º.
								if (player.clan.assistant === false) return // –ï—Å–ª–∏ –æ–Ω –Ω–µ –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª–∏, —Ç–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º

								await User.updateOne(
									{ uuid: uuidDownEmp },
									{ $set: { 'clan.assistant': false } }
								).then(async () => {
									await ctx[0].reply('‚õ∫Ô∏è –ü·¥è–Ω–∏–∂·¥á–Ω –¥·¥è …ú·¥Ä ç·¥á·¥Ñ·¥õ–∏·¥õ·¥á·¥ß—è.')
									await sleep(5000)
									await ctx[0].telegram.sendMessage(
										uuidDownEmp,
										'‚õ∫Ô∏è –¢·¥á–±—è ·¥®·¥è–Ω–∏…ú–∏·¥ß–∏ –¥·¥è …ú·¥Ä ç·¥á·¥Ñ·¥õ–∏·¥õ·¥á·¥ß—è.'
									)
								})
							})
						})
					}
				})
				break
			case '–ø–æ–≤—ã—à–µ–Ω–∏–µ':
				uuidUpEmp = ctx[0].message.text.replace(/–ø–æ–≤—ã—Å–∏—Ç—å –≥–∏–ª—å–¥–∏—è /i, '').trim()

				await User.findOne({ uuid }).then(async user => {
					// –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ —è–≤–ª—è–µ—Ç—Å—è –õ–∏–¥–µ—Ä–æ–º, —Ç–æ –∏–¥–µ–º –¥–∞–ª—å—à–µ...
					if (user.clan.leader === true) {
						await Clan.findOne({ name: user.clan.name }).then(async clan => {
							if (!clan.employees.includes(uuidUpEmp)) return // –ï—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç—É –≤ —Å–ø–∏—Å–∫–µ, —Ç–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º

							await User.findOne({ uuid: uuidUpEmp }).then(async player => {
								if (player.clan.name !== clan.name) return // –ï—Å–ª–∏ –∏–º–µ–Ω–∞ –ì–∏–ª—å–¥–∏–∏ –Ω–µ —Ä–∞–≤–Ω—ã, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º.

								await User.updateOne(
									{ uuid: uuidUpEmp },
									{ $set: { 'clan.assistant': true } }
								).then(async () => {
									await ctx[0].reply('‚õ∫Ô∏è –ü·¥è ô—ã…Ø·¥á–Ω –¥·¥è …ú·¥Ä ç·¥á·¥Ñ·¥õ–∏·¥õ·¥á·¥ß—è.')
									await sleep(5000)
									await ctx[0].telegram.sendMessage(
										uuidUpEmp,
										'‚õ∫Ô∏è –¢·¥á–±—è ·¥®·¥è ô—ã·¥Ñ–∏·¥ß–∏ –¥·¥è …ú·¥Ä ç·¥á·¥Ñ·¥õ–∏·¥õ·¥á·¥ß—è.'
									)
								})
							})
						})
					}
				})
				break
			case '–≤–ª–∞–¥–µ–Ω–∏–µ':
				uuidLeaderEmp = ctx[0].message.text.replace(/–ø–µ—Ä–µ–¥–∞—Ç—å –≥–ª–∞–≤—É /i, '').trim()

				await User.findOne({ uuid }).then(async user => {
					// –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ —è–≤–ª—è–µ—Ç—Å—è –õ–∏–¥–µ—Ä–æ–º, —Ç–æ –∏–¥–µ–º –¥–∞–ª—å—à–µ...
					if (user.clan.leader === true) {
						await Clan.findOne({ name: user.clan.name }).then(async clan => {
							if (!clan.employees.includes(uuidLeaderEmp)) return // –ï—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç—É –≤ —Å–ø–∏—Å–∫–µ, —Ç–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º

							await User.findOne({ uuid: uuidLeaderEmp }).then(async player => {
								if (player.clan.name !== clan.name) return // –ï—Å–ª–∏ –∏–º–µ–Ω–∞ –ì–∏–ª—å–¥–∏–∏ –Ω–µ —Ä–∞–≤–Ω—ã, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º.

								await User.bulkWrite([
									{
										updateOne: {
											filter: { uuid },
											update: {
												$set: { 'clan.leader': false, 'clan.assistant': false },
											},
										},
									},
									{
										updateOne: {
											filter: { uuid: uuidLeaderEmp },
											update: {
												$set: { 'clan.leader': true, 'clan.assistant': false },
											},
										},
									},
								])

								await Clan.updateOne(
									{ name: clan.name },
									{ $set: { 'leader.uuid': player.uuid, 'leader.username': player.username } }
								).then(async () => {
									await ctx[0].reply(`‚õ∫Ô∏è –ü·¥á·¥©·¥á–¥·¥Ä·¥ß–∏ ·¥¶·¥ß·¥Ä ô—É ${player.name}.`)
									await sleep(5000)
									await ctx[0].telegram.sendMessage(
										uuidLeaderEmp,
										`‚õ∫Ô∏è –¢·¥á–±—è ·¥®·¥è ô—ã·¥Ñ–∏·¥ß–∏ –¥·¥è –ì·¥ß·¥Ä ô—ã –ì–∏·¥ß—å–¥–∏–∏, ·¥õ·¥á·¥®·¥á·¥©—å ·¥õ—ã  ô·¥ß·¥Ä–¥·¥á·¥á…Ø—å ·¥¶–∏·¥ß—å–¥–∏–∏ "${clan.name}".`
									)
								})
							})
						})
					}
				})
				break
			case '–ø–æ–∫–∏–Ω—É—Ç—å':
				nameLeaveClan = data.replace('cl_leave_', '').replace(`_${uuid}`, '')

				await ctx[0].deleteMessage()
				await sleep(3000)

				await User.updateOne(
					{ uuid },
					{
						$set: {
							'clan.clan': false,
							'clan.leader': false,
							'clan.assistant': false,
							'clan.name': 'null',
						},
					}
				).then(async () => {
					await Clan.updateOne({ name: nameLeaveClan }, { $pull: { employees: uuid } }).then(
						async () => {
							await ctx[0].reply('üö™ –¢—ã ·¥®·¥è·¥ã–∏–Ω—É·¥ß ·¥¶–∏·¥ß—å–¥–∏—é.')
						}
					)
				})

				await sleep(10000)

				await Clan.findOne({ name: nameLeaveClan }).then(async clan => {
					await ctx[0].telegram.sendMessage(
						clan.leader.uuid,
						`üë§üè∞ –û–¥–∏–Ω –∏…ú ·¥õ ô·¥è–∏—Ö —É—á·¥Ä·¥Ñ·¥õ–Ω–∏·¥ã·¥è ô ·¥®·¥è·¥ã–∏–Ω—É·¥ß ·¥¶–∏·¥ß—å–¥–∏—é.`
					)
				})
				break
			case '—Ä–∞—Å–ø—É—Å—Ç–∏—Ç—å':
				nameRemoveClan = await data.replace('cl_dessolve_', '').replace(`_${uuid}`, '')

				await ctx[0].deleteMessage()

				await sleep(3000)

				await User.updateMany(
					{ 'clan.name': nameRemoveClan },
					{
						$set: {
							'clan.clan': false,
							'clan.leader': false,
							'clan.assistant': false,
							'clan.name': 'null',
						},
					}
				).then(async () => {
					await Clan.deleteOne({ name: nameRemoveClan }).then(async res => {
						await ctx[0].reply('üö™ –¢—ã ·¥©·¥Ä·¥Ñ·¥®—É·¥Ñ·¥õ–∏·¥ß ·¥¶–∏·¥ß—å–¥–∏—é.')
					})
				})
				break
			case '–æ–ø–∏—Å–∞–Ω–∏–µ':
				const descr = ctx[0].message.text.replace(/—Å–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ /i, '')

				if (descr.length < 1 || descr.length > 255) {
					await ctx[0].replyWithHTML('‚öí –û·¥®–∏·¥Ñ·¥Ä–Ω–∏·¥á –¥·¥è·¥ß–∂–Ω·¥è ·¥Ñ·¥è–¥·¥á·¥©–∂·¥Ä·¥õ—å: <i> ç–∏–Ω. 2 -  ç·¥Ä·¥ã·¥Ñ 255 ·¥Ñ–∏ ç ô·¥è·¥ß·¥è ô</i>.')
					return
				}

				await Clan.updateOne({"leader.uuid":uuid}, {$set: {"description": descr}})
				.then(async () => {
					await User.findOne({uuid}).then(async user => {
						if (user.clan.leader === false) return
						await ctx[0].reply('üí≠ –û·¥®–∏·¥Ñ·¥Ä–Ω–∏·¥á  ô –ì–∏·¥ß—å–¥–∏–∏ –∏…ú ç·¥á–Ω·¥á–Ω·¥è.')
					})
					
				})
				break
			case '–±–µ—Å–µ–¥–∞':
				const linkChat = ctx.message.text.replace(/—Å–º–µ–Ω–∏—Ç—å –±–µ—Å–µ–¥—É /i, '').trim() // TEXT user
				if (!linkChat.includes('https://t.me/+')) return

				await Clan.updateOne({"leader.uuid":uuid}, {$set: {"chat": linkChat}})
			 .then(async () => {
				await ctx.reply('‚úâÔ∏è –£·¥Ñ·¥®·¥á…Ø–Ω·¥è ·¥Ñ ç·¥á–Ω–∏·¥ß–∏ –±·¥á·¥Ñ·¥á–¥—É ‚úÖ')
			 })
			 break
			case '–ø—Ä–∏–Ω—è—Ç—å':
				const success = data.replace('cl_success_', '').replace(`_${uuid}`, '')

			 ctx[0].deleteMessage()

			 await Clan.findOne({ name: success }).then(async clan => {
			 	if (clan.employees.includes(uuid)) return
			 })

				await Clan.updateOne({ name: success }, { $push: { employees: uuid } }).then(
					async () => {
						await User.updateOne(
							{ uuid },
							{ $set: { 'clan.clan': true, 'clan.name': success } }
						)
					}
				)
				break
			case '–æ—Ç–∫–ª–æ–Ω–∏—Ç—å':
				ctx[0].deleteMessage()
				break
			case '–∑–∞–¥–∞–Ω–∏–µ':
				await Clan.findOne({"leader.uuid":uuid})
				.then(async clan => {

					if (clan.quest.stateReward) {
						await ctx[0].replyWithHTML(
							ctx[0].i18n.t('clan_quest', {
								todayCompleted: await clan.quest.todayCompleted, // –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
								count: await clan.quest.count, // –î–ª—è –≤—ã–ø–æ–ª–µ–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –Ω—É–∂–Ω–æ...
								reward: await clan.quest.reward, // –ù–∞–≥—Ä–∞–¥–∞
								completed: '‚úÖ', // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–¥–∞—á–∏
								stateReward: '‚úÖ', // –°–æ—Å—Ç–æ—è–Ω–∏–µ, –∑–∞–±—Ä–∞–ª –ª–∏ –∏–≥—Ä–æ–∫ —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É,
							})
						)
						return
					}

					if (clan.quest.completed) {
						await ctx[0].replyWithHTML(
							ctx[0].i18n.t('clan_quest', {
								todayCompleted: await clan.quest.todayCompleted, // –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
								count: await clan.quest.count, // –î–ª—è –≤—ã–ø–æ–ª–µ–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –Ω—É–∂–Ω–æ...
								reward: await clan.quest.reward, // –ù–∞–≥—Ä–∞–¥–∞
								completed: (await clan.quest.completed) ? '‚úÖ' : '‚ùå', // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–¥–∞—á–∏
								stateReward: '‚ùå', // –°–æ—Å—Ç–æ—è–Ω–∏–µ, –∑–∞–±—Ä–∞–ª –ª–∏ –∏–≥—Ä–æ–∫ —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É,
							}),
							Extra.markup(Markup.inlineKeyboard([Markup.callbackButton('üéÅ –ó–∞–±—Ä–∞—Ç—å', `cl_award_${uuid}`)])).HTML()
						)
					} else {
						await ctx[0].replyWithHTML(
							ctx[0].i18n.t('clan_quest', {
								todayCompleted: await clan.quest.todayCompleted, // –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
								count: await clan.quest.count, // –î–ª—è –≤—ã–ø–æ–ª–µ–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –Ω—É–∂–Ω–æ...
								reward: await clan.quest.reward, // –ù–∞–≥—Ä–∞–¥–∞
								completed: '‚ùå', // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–¥–∞—á–∏
								stateReward: '‚ùå', // –°–æ—Å—Ç–æ—è–Ω–∏–µ, –∑–∞–±—Ä–∞–ª –ª–∏ –∏–≥—Ä–æ–∫ —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É,
							})
						)
					}

				})
				break
			case '–Ω–∞–≥—Ä–∞–¥–∞':
				await Clan.findOne({"leader.uuid":uuid})
				.then(async clan => {
					if (uuid !== clan.leader.uuid) return
					if (clan.quest.stateReward) return
					if (clan.quest.completed === true) {
						await Clan.updateOne({"leader.uuid":uuid}, { $set: { 'quest.stateReward': true }})
						await User.updateMany({"clan.name": clan.name}, {$inc: { 'resources.recrute': clan.quest.reward}})
						await ctx.editMessageText()
						await sleep(5000)
						await ctx[0].reply('‚úÖ –í·¥Ñ·¥á ·¥õ ô·¥è–∏ ·¥Ñ·¥è·¥ã·¥ß·¥Ä–Ω·¥è ô—Ü—ã  ô·¥ã·¥ß—é—á·¥Ä—è ·¥õ·¥á–±—è ·¥®·¥è·¥ß—É—á–∏·¥ß–∏ –Ω·¥Ä·¥¶·¥©·¥Ä–¥—É …ú·¥Ä üè∞ –ó·¥Ä–¥·¥Ä–Ω–∏·¥á.')
					}
				})
				break
		 default:
		 	console.log('This command or text does not exist. (fn: clan)')
		}
	} catch (e) {
		console.error(e)
	}
}

// –¢–†–û–¢–¢–õ–ò–ù–ì ----->
let throttleClan = throttle(clan, 1500)

// 'üè∞ –ì–∏–ª—å–¥–∏—è'
// 'Messages'
bot.hears([new RegExp('–º–æ—è –≥–∏–ª—å–¥–∏—è', 'i'), new RegExp('–º–æ—è –≥–∏', 'i')], ctx => throttleClan([ctx, '–≥–∏–ª—å–¥–∏—è']))
bot.hears(/\–¥–æ–±–∞–≤–∏—Ç—å –≤ –ª–∞–≤–∫—É(.+)/i, ctx => throttleClan([ctx, '–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ']))
bot.hears(/\–∏—Å–∫–ª—é—á–∏—Ç—å –∏–∑ –ª–∞–≤–∫–∏(.+)/i, ctx => throttleClan([ctx, '–∏—Å–∫–ª—é—á–µ–Ω–∏–µ']))
bot.hears(new RegExp('–º–æ—è –ª–∞–≤–∫–∞', 'i'), ctx => throttleClan([ctx, '–º–æ—è –ª–∞–≤–∫–∞']))
bot.hears(new RegExp('–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤ –≥–∏–ª—å–¥–∏—é', 'i'), ctx => throttleClan([ctx, '–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ']))
bot.hears(new RegExp('–∏—Å–∫–ª—é—á–∏—Ç—å –∏–∑ –≥–∏–ª—å–¥–∏–∏', 'i'), ctx => throttleClan([ctx, '–∏—Å–∫–ª—é—á–µ–Ω–∏–µ']))
bot.hears(new RegExp('–ø–æ–≤—ã—Å–∏—Ç—å –≥–∏–ª—å–¥–∏—è', 'i'), ctx => throttleClan([ctx, '–ø–æ–≤—ã—à–µ–Ω–∏–µ']))
bot.hears(new RegExp('–ø–æ–Ω–∏–∑–∏—Ç—å –≥–∏–ª—å–¥–∏—è', 'i'), ctx => throttleClan([ctx, '–ø–æ–Ω–∏–∂–µ–Ω–∏–µ']))
bot.hears(new RegExp('–ø–µ—Ä–µ–¥–∞—Ç—å –≥–ª–∞–≤—É', 'i'), ctx => throttleClan([ctx, '–≤–ª–∞–¥–µ–Ω–∏–µ']))
bot.hears(new RegExp('–∏–Ω—Ñ–∞ –≥–∏–ª—å–¥–∏–∏', 'i'), ctx => throttleClan([ctx, '–∏–Ω—Ñ–∞ –≥–∏–ª—å–¥–∏–∏']))
bot.hears(new RegExp('—Å–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ', 'i'), ctx => throttleClan([ctx, '–æ–ø–∏—Å–∞–Ω–∏–µ']))
bot.hears(new RegExp('—Å–º–µ–Ω–∏—Ç—å –±–µ—Å–µ–¥—É', 'i'), ctx => throttleClan([ctx, '–±–µ—Å–µ–¥–∞']))
// Actions
bot.action(new RegExp('clan_(.+)'), ctx => throttleClan([ctx, '–≥–∏–ª—å–¥–∏—è']))
bot.action(new RegExp('employees_(.+)'), ctx => throttleClan([ctx, '—Å–æ—Å—Ç–∞–≤']))
bot.action(new RegExp('clMoney_(.+)'), ctx => throttleClan([ctx, '–º–æ–Ω–µ—Ç—ã']))
bot.action(new RegExp('my_bench_(.+)'), ctx => throttleClan([ctx, '–º–æ—è –ª–∞–≤–∫–∞']))
bot.action(new RegExp('cl_leave_(.+)'), ctx => throttleClan([ctx, '–ø–æ–∫–∏–Ω—É—Ç—å']))
bot.action(new RegExp('cl_dessolve_(.+)'), ctx => throttleClan([ctx, '—Ä–∞—Å–ø—É—Å—Ç–∏—Ç—å']))
bot.on('photo', ctx => throttleClan([ctx, '—Å–æ–∑–¥–∞–Ω–∏–µ']))
bot.action(new RegExp('cl_success_(.+)'), ctx => throttleClan([ctx, '–ø—Ä–∏–Ω—è—Ç—å']))
bot.action(new RegExp('cl_error_(.+)'), ctx => throttleClan([ctx, '–æ—Ç–∫–ª–æ–Ω–∏—Ç—å']))
bot.action(new RegExp('cl_q_(.+)'), ctx => throttleClan([ctx, '–∑–∞–¥–∞–Ω–∏–µ']))
bot.action(new RegExp('cl_award_(.+)'), ctx => throttleClan([ctx, '–Ω–∞–≥—Ä–∞–¥–∞']))

module.exports = bot
